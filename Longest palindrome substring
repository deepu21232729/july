class Solution:
    def longestPalindrome(self, s: str) -> str:
        i = 0
        j = 0
        
        s_len = len(s)
        for n in range(s_len):
            if n < s_len-1:
                s = s[:2*n+1] + "#" + s[2*n+1:]
                      
        
        r = [ 0 for x in range(len(s)) ]
        while i < len(s):
            while i - j >= 0 and i + j < len(s) and s[i-j] == s[i+j]:    
                j += 1
                
            r[i] = j
            k = 1
            while i - k >= 0 and k + r[i-k] < j:
                r[i+k] = r[i-k]
                k += 1
            i += k
            j -= k
            
        max_len = max(r)
        max_count = r.count(max_len)
        max_list = [s[x] if r[x]==max_len else "" for x in range(len(s))]
        if "#" in max_list and max_len != 1:
            max_index = max_list.index("#")
        else:
            max_index = r.index(max_len)     
        
        return s[max_index-max_len+1:max_index+max_len].replace('#', '')
